version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: ${DOCKERFILE:-Dockerfile.dev}
    container_name: tmdb-e2e-app
    ports:
      - "${PORT:-8080}:8080"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-8080}
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=${DATABASE_NAME:-tmdb_db}
      - DATABASE_USER=${DATABASE_USER:-tmdb_user}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-tmdb_password}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - node_modules_volume:/usr/src/app/node_modules
    networks:
      - tmdb-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: tmdb-postgres
    restart: unless-stopped
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-tmdb_db}
      POSTGRES_USER: ${DATABASE_USER:-tmdb_user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-tmdb_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-tmdb_user} -d ${DATABASE_NAME:-tmdb_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tmdb-network
  
  postgres-test:
    image: postgres:15-alpine
    container_name: tmdb-postgres-test
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: tmdb_db_test
      POSTGRES_USER: tmdb_user_test
      POSTGRES_PASSWORD: tmdb_password_test
    volumes:
      - postgres_data_test:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tmdb_user_test -d tmdb_db_test"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tmdb-network

volumes:
  postgres_data:
    driver: local
  postgres_data_test:
    driver: local
  pgadmin_data:
    driver: local
  node_modules_volume:
    driver: local

networks:
  tmdb-network:
    driver: bridge
